Wed Jun 08 10:39:17 2016  [TRACE]: Fin CEquipED42::Charge_Contexte(char *fichier)
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:17 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:17 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : switch (actionEnCours) et case MA:!
Wed Jun 08 10:39:17 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:17 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:17 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : switch (actionEnCours) et case MA:!
Wed Jun 08 10:39:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : switch (actionEnCours) et case MA:!
Wed Jun 08 10:39:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : switch (actionEnCours) et case MA:!
Wed Jun 08 10:39:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : switch (actionEnCours) et case MA:!
Wed Jun 08 10:39:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(etat == FALSE) ! et else
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(etat == FALSE) ! et else et if (!eqp->GetStatusNl())
Wed Jun 08 10:39:20 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:20 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : case ED42_INITIALISATION: !
Wed Jun 08 10:39:20 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:20 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:20 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:21 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:21 2016  [TRACE]: Dans : case 2: !
Wed Jun 08 10:39:21 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:21 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:21 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:21 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:21 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:23 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans : case 3: !
Wed Jun 08 10:39:23 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:23 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:23 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:25 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:25 2016  [TRACE]: Dans : case 4: !
Wed Jun 08 10:39:25 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:25 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:25 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:25 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:25 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:25 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:26 2016  [TRACE]: 
	mess: A01N891S?INI?RCS#43

Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: INI(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::SetStatusS20(int val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:26 2016  [TRACE]: 
	reponse: 18
	format: 2

Wed Jun 08 10:39:26 2016  [TRACE]: 12
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42:: INI(string trame)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:26 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:26 2016  [TRACE]: 00
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:26 2016  [TRACE]: a01N891S#00INI4,#12
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:26 2016  [TRACE]: a01N891S#00INI4,#12
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:26 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N891S#00INI4,#12RCS#4e

Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:26 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : case 5: !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : case 5: et if(presencePowerBitError) et else!
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::MiseEnMarche() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::MiseEnMarche() et if (eqp->GetStatusNl() == FALSE)!
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::SetStatusS20(int val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : debut CEquipED42::RAZTable() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]:  
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4298164;1637284;;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4298164;1637284;;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::setErrorTable(int errorValue, bool val
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DetnrCommandInError()
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::Suppression du flag used pour toutes les erreurs
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::EncodeError(TError val)
Wed Jun 08 10:39:27 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::setErrorTable(int errorValue, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::setAlarmTable(int alarmValue, bool val) !
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: CEquipED42::setStatusErrorTable(int errorNumber, bool val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::EncodePowerBit(TPowerBitError val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::EncodePowerBit(TPowerBitError val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::EncodePowerBit(TPowerBitError val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::EncodePowerBit(TPowerBitError val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodePowerBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::EncodePowerBit(TPowerBitError val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodeManuallyBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodeManuallyBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodeManuallyBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodeManuallyBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::DecodeManuallyBit(string val) !
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CEquipED42::RAZTable() !
Wed Jun 08 10:39:27 2016  [TRACE]: Fin : CDlgED42::MiseEnMarche() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageBoutons(bool affiche) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageBoutons(bool affiche) et if (eqp->GetMarcheEd42() && !eqp->GetStatusNl())!
Wed Jun 08 10:39:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichageBoutons(bool affiche) !
Wed Jun 08 10:39:27 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:27 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:27 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:27 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:29 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:29 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:29 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:29 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:29 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:29 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:29 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:30 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:30 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:30 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:30 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:30 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:30 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:30 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:31 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:31 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:31 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:31 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:31 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:31 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:31 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:32 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:32 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:32 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:32 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:32 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:32 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:32 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:33 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:33 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:33 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:33 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:33 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:33 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:33 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:34 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:34 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:34 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:34 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:34 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:34 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:34 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:35 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:35 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:35 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:35 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:35 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:35 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:35 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:36 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:36 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:36 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:36 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:36 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:36 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:36 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:37 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:37 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:37 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:37 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:37 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:38 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	mess: A01N892S?INI?RCS#44

Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: INI(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::SetStatusS20(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	reponse: 18
	format: 2

Wed Jun 08 10:39:38 2016  [TRACE]: 12
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: INI(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:38 2016  [TRACE]: 00
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:38 2016  [TRACE]: a01N892S#00INI4,#12
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:38 2016  [TRACE]: a01N892S#00INI4,#12
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:38 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N892S#00INI4,#12RCS#4f

Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == LOCAL_TC)!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:38 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:38 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	mess: A01N893S?TAK0PWCHK#37fcd993RCS#12

Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: TAK(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::SetStatusS20(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: TAK(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: PWCHK(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::SetStatusS20(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: PWCHK(string trame)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 3
	cptNbrCmd: 3

Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:38 2016  [TRACE]: 00
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:38 2016  [TRACE]: a01N893S#00
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:38 2016  [TRACE]: RES
Wed Jun 08 10:39:38 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:38 2016  [TRACE]: a01N893S#00RES0,0,3
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:38 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N893S#00RES0,0,3RCS#5f

Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:38 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:39 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	mess: A01N894S?SYS?RCS#65

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 00
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: a01N894S#00SYS#52000200
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:39 2016  [TRACE]: a01N894S#00SYS#52000200
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:39 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N894S#00SYS#52000200RCS#36

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	mess: A01N895S?CES?RCS#42

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: CES(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 18
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 12
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 2
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 02
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: CES(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 00
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: a01N895S#00CES#12,#02
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:39 2016  [TRACE]: a01N895S#00CES#12,#02
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:39 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N895S#00CES#12,#02RCS#9e

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	mess: A01N896S?CVLR?RCS#9f

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: CVLR(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: CVLR(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 00
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: a01N896S#00CVLR#0000000f,#00200000,#00000400
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:39 2016  [TRACE]: a01N896S#00CVLR#0000000f,#00200000,#00000400
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:39 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N896S#00CVLR#0000000f,#00200000,#00000400RCS#41

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:39 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:39 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	mess: A01N897S?CES?RCS#44

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: CES(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 18
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 12
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 2
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 02
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: CES(string trame)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:39 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:39 2016  [TRACE]: 00
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:39 2016  [TRACE]: a01N897S#00CES#12,#02
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:39 2016  [TRACE]: a01N897S#00CES#12,#02
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:39 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N897S#00CES#12,#02RCS#a0

Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:39 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:39 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	mess: A01N898S?ALM?RCS#44

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: ALM(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: ALM(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:40 2016  [TRACE]: 00
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: a01N898S#00ALM0,0
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:40 2016  [TRACE]: a01N898S#00ALM0,0
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:40 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N898S#00ALM0,0RCS#f5

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:40 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	mess: A01N899S?ERR?RCS#54

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: ERR(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;1;error codes of cryptomodul;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;100;F101 interface not activated;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;101;F101 timeout from SKM;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;103;F101 error - give header action;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;106;no variable available;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;107;wrong password type;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;108;F101 error - store variable;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;109;F101 error - store KEK;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;111;configuration error;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;112;start error;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;114;error in software;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;116;selected variable not defined;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;119;update limit exceeded;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;122;bilateral update global error;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;123;bilateral tag global error;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;125;wrong dld password from user;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;126;format error;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;1;127;error while connecting CIK;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;2;0;variable management;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;3;207;missing CIK;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;3;1;wrong condition CIK;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;3;2;timeout while CIK-init;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;3;3;error from cryptomodul;0
Wed Jun 08 10:39:40 2016  [TRACE]: CEquipED42::DecodeError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: 0;4;1;password check;0
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: ERR(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:40 2016  [TRACE]: 00
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: a01N899S#00ERR0,0
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:40 2016  [TRACE]: a01N899S#00ERR0,0
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:40 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N899S#00ERR0,0RCS#05

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	mess: A01N900S?KEK?RCS#35

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: KEK(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: KEK(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:40 2016  [TRACE]: 00
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: a01N900S#00KEK0,#FF,#00,255,10,3015,110216
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:40 2016  [TRACE]: a01N900S#00KEK0,#FF,#00,255,10,3015,110216
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:40 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N900S#00KEK0,#FF,#00,255,10,3015,110216RCS#b5

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:40 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:40 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	mess: A01N901S?VER?RCS#48

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: VER(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: VER(string trame) et return SUCCESS;
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:40 2016  [TRACE]: 00
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: a01N901S#00VER414120810,415120811,027120712,027120812,048120813,601261011
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:40 2016  [TRACE]: a01N901S#00VER414120810,415120811,027120712,027120812,048120813,601261011
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:40 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N901S#00VER414120810,415120811,027120712,027120812,048120813,601261011RCS#ef

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	mess: A01N902S?OPS?RCS#4e

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: OPS(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: OPS(string trame)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:40 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:40 2016  [TRACE]: 00
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:40 2016  [TRACE]: a01N902S#00OPS255
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:40 2016  [TRACE]: a01N902S#00OPS255
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:40 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N902S#00OPS255RCS#0f

Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:40 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:41 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	mess: A01N903S?CVLR?RCS#94

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: CVLR(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::KeyMemoryIndex
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: CVLR(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: a01N903S#00CVLR#0000000f,#00200000,#00000400
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:41 2016  [TRACE]: a01N903S#00CVLR#0000000f,#00200000,#00000400
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:41 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N903S#00CVLR#0000000f,#00200000,#00000400RCS#36

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	mess: A01N904S?REQDS?RCS#dd

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: REQDS(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: REQDS(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: a01N904S#00REQDS2
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:41 2016  [TRACE]: a01N904S#00REQDS2
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:41 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N904S#00REQDS2RCS#34

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:41 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:41 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	mess: A01N905S?REQID?RCS#d4

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: REQID(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: REQID(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: a01N905S#00REQID123456
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:41 2016  [TRACE]: a01N905S#00REQID123456
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:41 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N905S#00REQID123456RCS#2e

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	mess: A01N906S?REQPS0?RCS#1b

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 0a
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:41 2016  [TRACE]: 0000
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:41 2016  [TRACE]: 0000
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:41 2016  [TRACE]: 00000000
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:41 2016  [TRACE]: 000000
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:41 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:41 2016  [TRACE]: 00
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:41 2016  [TRACE]: a01N906S#00REQPS0,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:41 2016  [TRACE]: a01N906S#00REQPS0,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:41 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N906S#00REQPS0,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#9f

Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:41 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:42 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	mess: A01N907S?REQPS1?RCS#1d

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 0a
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:42 2016  [TRACE]: 00000000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:42 2016  [TRACE]: 000000
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: a01N907S#00REQPS1,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:42 2016  [TRACE]: a01N907S#00REQPS1,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:42 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N907S#00REQPS1,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a1

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	mess: A01N908S?REQPS2?RCS#1f

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 0a
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:42 2016  [TRACE]: 00000000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:42 2016  [TRACE]: 000000
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: a01N908S#00REQPS2,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:42 2016  [TRACE]: a01N908S#00REQPS2,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:42 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N908S#00REQPS2,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a3

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:42 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:42 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	mess: A01N909S?REQPS3?RCS#21

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 0a
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:42 2016  [TRACE]: 0000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:42 2016  [TRACE]: 00000000
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:42 2016  [TRACE]: 000000
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:42 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:42 2016  [TRACE]: 00
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:42 2016  [TRACE]: a01N909S#00REQPS3,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:42 2016  [TRACE]: a01N909S#00REQPS3,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:42 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N909S#00REQPS3,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a5

Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:42 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	mess: A01N910S?REQPS4?RCS#1a

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 0a
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:43 2016  [TRACE]: 00000000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:43 2016  [TRACE]: 000000
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: a01N910S#00REQPS4,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:43 2016  [TRACE]: a01N910S#00REQPS4,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:43 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N910S#00REQPS4,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#9e

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:43 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	mess: A01N911S?REQPS5?RCS#1c

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 0a
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:43 2016  [TRACE]: 00000000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:43 2016  [TRACE]: 000000
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: a01N911S#00REQPS5,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:43 2016  [TRACE]: a01N911S#00REQPS5,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:43 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N911S#00REQPS5,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a0

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:43 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:43 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	mess: A01N912S?REQPS6?RCS#1e

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 0a
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:43 2016  [TRACE]: 00000000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:43 2016  [TRACE]: 000000
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: a01N912S#00REQPS6,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:43 2016  [TRACE]: a01N912S#00REQPS6,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:43 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N912S#00REQPS6,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a2

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	mess: A01N913S?REQPS7?RCS#20

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 0a
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:43 2016  [TRACE]: 0000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:43 2016  [TRACE]: 00000000
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:43 2016  [TRACE]: 000000
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:43 2016  [TRACE]: 00
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:43 2016  [TRACE]: a01N913S#00REQPS7,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:43 2016  [TRACE]: a01N913S#00REQPS7,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:43 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N913S#00REQPS7,0,2,0,1,0,0,0,0,0,0,0,0,13,0,1,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#a4

Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:43 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:44 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	mess: A01N914S?REQPS8?RCS#22

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 05
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:44 2016  [TRACE]: 00000000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:44 2016  [TRACE]: 000000
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: a01N914S#00REQPS8,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:44 2016  [TRACE]: a01N914S#00REQPS8,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:44 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N914S#00REQPS8,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#81

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	mess: A01N915S?REQPS9?RCS#24

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 05
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:44 2016  [TRACE]: 00000000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:44 2016  [TRACE]: 000000
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: a01N915S#00REQPS9,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:44 2016  [TRACE]: a01N915S#00REQPS9,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:44 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N915S#00REQPS9,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#83

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:44 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:44 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	mess: A01N916S?REQPS10?RCS#4d

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 05
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:44 2016  [TRACE]: 0000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:44 2016  [TRACE]: 00000000
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:44 2016  [TRACE]: 000000
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:44 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:44 2016  [TRACE]: 00
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:44 2016  [TRACE]: a01N916S#00REQPS10,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:44 2016  [TRACE]: a01N916S#00REQPS10,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:44 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N916S#00REQPS10,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ac

Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:44 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	mess: A01N917S?REQPS11?RCS#4f

Wed Jun 08 10:39:45 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: 05
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:45 2016  [TRACE]: 00000000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:45 2016  [TRACE]: 000000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:45 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: a01N917S#00REQPS11,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:45 2016  [TRACE]: a01N917S#00REQPS11,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:45 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N917S#00REQPS11,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ae

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	mess: A01N918S?REQPS12?RCS#51

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 05
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:45 2016  [TRACE]: 00000000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:45 2016  [TRACE]: 000000
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: a01N918S#00REQPS12,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:45 2016  [TRACE]: a01N918S#00REQPS12,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:45 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N918S#00REQPS12,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#b0

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:45 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:45 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	mess: A01N919S?REQPS13?RCS#53

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 05
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:45 2016  [TRACE]: 0000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:45 2016  [TRACE]: 00000000
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:45 2016  [TRACE]: 000000
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:45 2016  [TRACE]: 00
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:45 2016  [TRACE]: a01N919S#00REQPS13,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:45 2016  [TRACE]: a01N919S#00REQPS13,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:45 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N919S#00REQPS13,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#b2

Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:45 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	mess: A01N920S?REQPS14?RCS#4c

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 05
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:46 2016  [TRACE]: 00000000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:46 2016  [TRACE]: 000000
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: a01N920S#00REQPS14,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:46 2016  [TRACE]: a01N920S#00REQPS14,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:46 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N920S#00REQPS14,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ab

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	mess: A01N921S?REQPS15?RCS#4e

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 05
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:46 2016  [TRACE]: 00000000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:46 2016  [TRACE]: 000000
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: a01N921S#00REQPS15,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:46 2016  [TRACE]: a01N921S#00REQPS15,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:46 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N921S#00REQPS15,1,1,3,0,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ad

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	mess: A01N922S?REQPS16?RCS#50

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 0a
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:46 2016  [TRACE]: 0000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:46 2016  [TRACE]: 00000000
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:46 2016  [TRACE]: 000000
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:46 2016  [TRACE]: 00
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:46 2016  [TRACE]: a01N922S#00REQPS16,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:46 2016  [TRACE]: a01N922S#00REQPS16,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:46 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N922S#00REQPS16,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#3d

Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:46 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	mess: A01N923S?REQPS17?RCS#52

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 0a
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:47 2016  [TRACE]: 00000000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:47 2016  [TRACE]: 000000
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: a01N923S#00REQPS17,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:47 2016  [TRACE]: a01N923S#00REQPS17,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:47 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N923S#00REQPS17,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#3f

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:47 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	mess: A01N924S?REQPS18?RCS#54

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 0a
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:47 2016  [TRACE]: 00000000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:47 2016  [TRACE]: 000000
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: a01N924S#00REQPS18,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:47 2016  [TRACE]: a01N924S#00REQPS18,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:47 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N924S#00REQPS18,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#41

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	mess: A01N925S?REQPS19?RCS#56

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 0a
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:47 2016  [TRACE]: 00000000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:47 2016  [TRACE]: 000000
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: a01N925S#00REQPS19,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:47 2016  [TRACE]: a01N925S#00REQPS19,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:47 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N925S#00REQPS19,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#43

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:47 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:47 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	mess: A01N926S?REQPS20?RCS#4f

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 0a
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:47 2016  [TRACE]: 0000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:47 2016  [TRACE]: 00000000
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:47 2016  [TRACE]: 000000
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:47 2016  [TRACE]: 00
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:47 2016  [TRACE]: a01N926S#00REQPS20,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:47 2016  [TRACE]: a01N926S#00REQPS20,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:47 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N926S#00REQPS20,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#3c

Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:47 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:48 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	mess: A01N927S?REQPS21?RCS#51

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 0a
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:48 2016  [TRACE]: 00000000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:48 2016  [TRACE]: 000000
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: a01N927S#00REQPS21,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:48 2016  [TRACE]: a01N927S#00REQPS21,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:48 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N927S#00REQPS21,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#3e

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	mess: A01N928S?REQPS22?RCS#53

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 0a
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:48 2016  [TRACE]: 00000000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:48 2016  [TRACE]: 000000
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: a01N928S#00REQPS22,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:48 2016  [TRACE]: a01N928S#00REQPS22,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:48 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N928S#00REQPS22,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#40

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:48 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:48 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	mess: A01N929S?REQPS23?RCS#55

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 10
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 0a
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:48 2016  [TRACE]: 0000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:48 2016  [TRACE]: 00000000
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:48 2016  [TRACE]: 000000
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:48 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:48 2016  [TRACE]: 00
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:48 2016  [TRACE]: a01N929S#00REQPS23,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:48 2016  [TRACE]: a01N929S#00REQPS23,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:48 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N929S#00REQPS23,2,2,0,11,0,0,0,0,0,1,0,0,13,0,15,#0a,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#42

Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:48 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	mess: A01N930S?REQPS24?RCS#4e

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 05
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:49 2016  [TRACE]: 00000000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:49 2016  [TRACE]: 000000
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: a01N930S#00REQPS24,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:49 2016  [TRACE]: a01N930S#00REQPS24,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N930S#00REQPS24,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#e8

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:49 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	mess: A01N931S?REQPS25?RCS#50

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 05
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:49 2016  [TRACE]: 00000000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:49 2016  [TRACE]: 000000
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: a01N931S#00REQPS25,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:49 2016  [TRACE]: a01N931S#00REQPS25,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N931S#00REQPS25,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ea

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:49 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:49 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	mess: A01N932S?REQPS26?RCS#52

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 05
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:49 2016  [TRACE]: 0000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:49 2016  [TRACE]: 00000000
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:49 2016  [TRACE]: 000000
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:49 2016  [TRACE]: 00
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:49 2016  [TRACE]: a01N932S#00REQPS26,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:49 2016  [TRACE]: a01N932S#00REQPS26,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N932S#00REQPS26,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ec

Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	mess: A01N933S?REQPS27?RCS#54

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 05
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:50 2016  [TRACE]: 00000000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:50 2016  [TRACE]: 000000
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: a01N933S#00REQPS27,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:50 2016  [TRACE]: a01N933S#00REQPS27,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:50 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N933S#00REQPS27,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ee

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:50 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	mess: A01N934S?REQPS28?RCS#56

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 05
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:50 2016  [TRACE]: 00000000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:50 2016  [TRACE]: 000000
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: a01N934S#00REQPS28,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:50 2016  [TRACE]: a01N934S#00REQPS28,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:50 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N934S#00REQPS28,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#f0

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	mess: A01N935S?REQPS29?RCS#58

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 05
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:50 2016  [TRACE]: 00000000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:50 2016  [TRACE]: 000000
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: a01N935S#00REQPS29,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:50 2016  [TRACE]: a01N935S#00REQPS29,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:50 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N935S#00REQPS29,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#f2

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:50 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:50 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	mess: A01N936S?REQPS30?RCS#51

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 05
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:50 2016  [TRACE]: 0000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:50 2016  [TRACE]: 00000000
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:50 2016  [TRACE]: 000000
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:50 2016  [TRACE]: 00
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:50 2016  [TRACE]: a01N936S#00REQPS30,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:50 2016  [TRACE]: a01N936S#00REQPS30,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:50 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N936S#00REQPS30,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#eb

Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:50 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:51 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	mess: A01N937S?REQPS31?RCS#53

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 05
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:51 2016  [TRACE]: 0000
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:39:51 2016  [TRACE]: 0000
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 00
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 8

Wed Jun 08 10:39:51 2016  [TRACE]: 00000000
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 00
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:39:51 2016  [TRACE]: 000000
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 00
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: a01N937S#00REQPS31,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:51 2016  [TRACE]: a01N937S#00REQPS31,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:51 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N937S#00REQPS31,3,5,6,11,0,0,0,0,0,0,0,0,4,0,15,#05,0,#0000,0,#0000,#00,#00000000,50,50,50,50,#00,#000000,0,0,50,50,50,50,50,50,50,50,50,0RCS#ed

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	mess: A01N938S?CV1?RCS#2f

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 00
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: a01N938S#00CV1,#01,#0f,255,1,2010,020516
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:51 2016  [TRACE]: a01N938S#00CV1,#01,#0f,255,1,2010,020516
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:51 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N938S#00CV1,#01,#0f,255,1,2010,020516RCS#57

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:51 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:51 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	mess: A01N939S?CV2?RCS#31

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:51 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:51 2016  [TRACE]: 00
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:51 2016  [TRACE]: a01N939S#00CV2,#00,#00,255,5,3018,181215
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:51 2016  [TRACE]: a01N939S#00CV2,#00,#00,255,5,3018,181215
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:51 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N939S#00CV2,#00,#00,255,5,3018,181215RCS#33

Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:51 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:51 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	mess: A01N940S?CV3?RCS#2a

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:52 2016  [TRACE]: 00
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: a01N940S#00CV3,#00,#90,255,0,1005,101015
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:52 2016  [TRACE]: a01N940S#00CV3,#00,#90,255,0,1005,101015
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:52 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N940S#00CV3,#00,#90,255,0,1005,101015RCS#20

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:52 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	mess: A01N941S?CV4?RCS#2c

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:52 2016  [TRACE]: 00
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: a01N941S#00CV4,#00,#00,255,0,3008,101114
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:52 2016  [TRACE]: a01N941S#00CV4,#00,#00,255,0,3008,101114
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:52 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N941S#00CV4,#00,#00,255,0,3008,101114RCS#1e

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	mess: A01N942S?CV54?RCS#62

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:52 2016  [TRACE]: 00
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: a01N942S#00CV54,#00,#00,255,0,2008,050779
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:52 2016  [TRACE]: a01N942S#00CV54,#00,#00,255,0,2008,050779
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:52 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N942S#00CV54,#00,#00,255,0,2008,050779RCS#67

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: 
	mess: A01N943S?CV75?RCS#66

Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:52 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:52 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:52 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:52 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:52 2016  [TRACE]: 00
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: a01N943S#00CV75,#00,#00,255,4,3012,021215
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:52 2016  [TRACE]: a01N943S#00CV75,#00,#00,255,4,3012,021215
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N943S#00CV75,#00,#00,255,4,3012,021215RCS#5a

Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:52 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	mess: A01N944S?CV1?RCS#2c

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:52 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:52 2016  [TRACE]: 00
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:52 2016  [TRACE]: a01N944S#00CV1,#01,#0f,255,1,2010,020516
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:52 2016  [TRACE]: a01N944S#00CV1,#01,#0f,255,1,2010,020516
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:52 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N944S#00CV1,#01,#0f,255,1,2010,020516RCS#54

Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:52 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	mess: A01N945S?CV2?RCS#2e

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:53 2016  [TRACE]: 00
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: a01N945S#00CV2,#00,#00,255,5,3018,181215
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:53 2016  [TRACE]: a01N945S#00CV2,#00,#00,255,5,3018,181215
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:53 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N945S#00CV2,#00,#00,255,5,3018,181215RCS#30

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:53 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	mess: A01N946S?CV3?RCS#30

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:53 2016  [TRACE]: 00
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: a01N946S#00CV3,#00,#90,255,0,1005,101015
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:53 2016  [TRACE]: a01N946S#00CV3,#00,#90,255,0,1005,101015
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:53 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N946S#00CV3,#00,#90,255,0,1005,101015RCS#26

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	mess: A01N947S?CV4?RCS#32

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:53 2016  [TRACE]: 00
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: a01N947S#00CV4,#00,#00,255,0,3008,101114
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:53 2016  [TRACE]: a01N947S#00CV4,#00,#00,255,0,3008,101114
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:53 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N947S#00CV4,#00,#00,255,0,3008,101114RCS#24

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	mess: A01N948S?CV54?RCS#68

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:53 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:53 2016  [TRACE]: 00
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: a01N948S#00CV54,#00,#00,255,0,2008,050779
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:53 2016  [TRACE]: a01N948S#00CV54,#00,#00,255,0,2008,050779
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:53 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N948S#00CV54,#00,#00,255,0,2008,050779RCS#6d

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:53 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	mess: A01N949S?CV75?RCS#6c

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::TagStatusCrypto
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: CV(string trame)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:53 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:53 2016  [TRACE]: 00
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:53 2016  [TRACE]: a01N949S#00CV75,#00,#00,255,4,3012,021215
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:53 2016  [TRACE]: a01N949S#00CV75,#00,#00,255,4,3012,021215
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:53 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N949S#00CV75,#00,#00,255,4,3012,021215RCS#60

Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:53 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	mess: A01N950S?SYS?RCS#5e

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:54 2016  [TRACE]: 00
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: a01N950S#00SYS#40000200
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:54 2016  [TRACE]: a01N950S#00SYS#40000200
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:54 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N950S#00SYS#40000200RCS#2c

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:54 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	mess: A01N951S?OFL0RCS#32

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: OFL(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et SetnrCommandInError !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 1
	cptNbrCmd: 2

Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:54 2016  [TRACE]: 00
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: a01N951S#00
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:54 2016  [TRACE]: RES
Wed Jun 08 10:39:54 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:54 2016  [TRACE]: a01N951S#00RES0,0,1
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:54 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N951S#00RES0,0,1RCS#58

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:54 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:54 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	mess: A01N952S?SETPS9,1,4,6,11,255,0,0,1,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#02000000,50,50,56,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#19

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:54 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:54 2016  [TRACE]: 00
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:54 2016  [TRACE]: a01N952S#00
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:54 2016  [TRACE]: RES
Wed Jun 08 10:39:54 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:54 2016  [TRACE]: a01N952S#00RES0,0,2
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:54 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N952S#00RES0,0,2RCS#5a

Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:54 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	mess: A01N953S?SETPS8,1,1,3,11,255,0,0,1,0,0,1,0,13,0,15,#05,2,#0000,1,#0000,#00,#02000000,50,50,50,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#0d

Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et SetnrCommandInError !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 1
	cptNbrCmd: 2

Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:55 2016  [TRACE]: 00
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:55 2016  [TRACE]: a01N953S#00
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:55 2016  [TRACE]: RES
Wed Jun 08 10:39:55 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:55 2016  [TRACE]: a01N953S#00RES0,0,1
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:55 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N953S#00RES0,0,1RCS#5a

Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	mess: A01N954S?SETPS10,1,2,0,3,255,0,0,1,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#02000000,50,50,50,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#0a

Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:55 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:55 2016  [TRACE]: 00
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:55 2016  [TRACE]: a01N954S#00
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:55 2016  [TRACE]: RES
Wed Jun 08 10:39:55 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:55 2016  [TRACE]: a01N954S#00RES0,0,2
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:55 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N954S#00RES0,0,2RCS#5c

Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:56 2016  [TRACE]: 
	mess: A01N955S?SETPS11,1,4,6,11,255,0,0,1,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#02000000,50,50,56,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#45

Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:56 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:56 2016  [TRACE]: 00
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:56 2016  [TRACE]: a01N955S#00
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:56 2016  [TRACE]: RES
Wed Jun 08 10:39:56 2016  [TRACE]: RES0,0
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:56 2016  [TRACE]: a01N955S#00RES0,0,2
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:56 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N955S#00RES0,0,2RCS#5d

Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:56 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:56 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:57 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:57 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:57 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:57 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:57 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:58 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:58 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:58 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:58 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:58 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:59 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	mess: A01N956S?SYS?RCS#64

Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:59 2016  [TRACE]: 00
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:59 2016  [TRACE]: a01N956S#00SYS#40100200
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:59 2016  [TRACE]: a01N956S#00SYS#40100200
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:59 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N956S#00SYS#40100200RCS#33

Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:59 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	mess: A01N957S?PSS?RCS#5c

Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: PSS(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	reponse: 3584
	format: 8

Wed Jun 08 10:39:59 2016  [TRACE]: 00000e00
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: PSS(string trame)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:39:59 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:39:59 2016  [TRACE]: 00
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:39:59 2016  [TRACE]: a01N957S#00PSS#00000e00
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:39:59 2016  [TRACE]: a01N957S#00PSS#00000e00
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:39:59 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N957S#00PSS#00000e00RCS#59

Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:39:59 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:39:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	mess: A01N958S?REQPS9?RCS#2b

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 05
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:00 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 04
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:00 2016  [TRACE]: 000000
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: a01N958S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:00 2016  [TRACE]: a01N958S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:00 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N958S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#47

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:00 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	mess: A01N959S?REQPS10?RCS#54

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 9
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 09
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:00 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 04
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:00 2016  [TRACE]: 000000
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: a01N959S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:00 2016  [TRACE]: a01N959S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:00 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N959S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#37

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	mess: A01N960S?REQPS11?RCS#4d

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 05
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:00 2016  [TRACE]: 0000
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:00 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 04
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:00 2016  [TRACE]: 000000
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:00 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:00 2016  [TRACE]: 00
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:00 2016  [TRACE]: a01N960S#00REQPS11,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:00 2016  [TRACE]: a01N960S#00REQPS11,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:00 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N960S#00REQPS11,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#69

Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:00 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:00 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:00 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:01 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:01 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:01 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:01 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:01 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:02 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:02 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:02 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:02 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:02 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:03 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:03 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:03 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:03 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:03 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:04 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:04 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:04 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:04 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:04 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:05 2016  [TRACE]: 
	mess: A01N961S?SYS?RCS#60

Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:05 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:05 2016  [TRACE]: 00
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:05 2016  [TRACE]: a01N961S#00SYS#40000200
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:05 2016  [TRACE]: a01N961S#00SYS#40000200
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:05 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N961S#00SYS#40000200RCS#2e

Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:05 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:05 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:05 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:05 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:06 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:06 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:06 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:06 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:06 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:07 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:07 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:07 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:07 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:07 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:08 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:08 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:08 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:08 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:08 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:09 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:09 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:09 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:09 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:09 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:10 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:10 2016  [TRACE]: 
	mess: A01N962S?SYS?RCS#61

Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:10 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:10 2016  [TRACE]: 00
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:10 2016  [TRACE]: a01N962S#00SYS#40000200
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:10 2016  [TRACE]: a01N962S#00SYS#40000200
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:10 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N962S#00SYS#40000200RCS#2f

Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:10 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:10 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:10 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:11 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:11 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:11 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:12 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:12 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:12 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:12 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:12 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:13 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:13 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:13 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:13 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:13 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:14 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:14 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:14 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:14 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:14 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:15 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:15 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:15 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:15 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:15 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:16 2016  [TRACE]: 
	mess: A01N963S?SYS?RCS#62

Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:16 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:16 2016  [TRACE]: 00
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:16 2016  [TRACE]: a01N963S#00SYS#40000200
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:16 2016  [TRACE]: a01N963S#00SYS#40000200
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:16 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N963S#00SYS#40000200RCS#30

Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:16 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:16 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:16 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:16 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:16 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:17 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:17 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:17 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:17 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:17 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:18 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:18 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:19 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:19 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:20 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:20 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:20 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:20 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:20 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:21 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:21 2016  [TRACE]: 
	mess: A01N964S?SYS?RCS#63

Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:21 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:21 2016  [TRACE]: 00
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:21 2016  [TRACE]: a01N964S#00SYS#40000200
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:21 2016  [TRACE]: a01N964S#00SYS#40000200
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:21 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N964S#00SYS#40000200RCS#31

Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:21 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:21 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:21 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:22 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:22 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:22 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:22 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:22 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:23 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:23 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:23 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:23 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:23 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:24 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:24 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:24 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:24 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:24 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:25 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:25 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:25 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:25 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:25 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:26 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:26 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:26 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:26 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:26 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:27 2016  [TRACE]: 
	mess: A01N965S?SYS?RCS#64

Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:27 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:27 2016  [TRACE]: 00
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:27 2016  [TRACE]: a01N965S#00SYS#40000200
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:27 2016  [TRACE]: a01N965S#00SYS#40000200
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:27 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N965S#00SYS#40000200RCS#32

Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:27 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:27 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:27 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:27 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:29 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:29 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:29 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:29 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:29 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:30 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:30 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:30 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:30 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:30 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:31 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:31 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:31 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:31 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:31 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:31 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:31 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:32 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:32 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:32 2016  [TRACE]: 
	mess: A01N966S?SYS?RCS#65

Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:32 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:32 2016  [TRACE]: 00
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:32 2016  [TRACE]: a01N966S#00SYS#40000200
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:32 2016  [TRACE]: a01N966S#00SYS#40000200
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:32 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N966S#00SYS#40000200RCS#33

Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:32 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:32 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:33 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:33 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:33 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:33 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:33 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:33 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:33 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:34 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:34 2016  [TRACE]: 
	mess: A01N967S?CVTAG1,9RCS#33

Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: CVTAG(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: CVTAG(string trame) debut traitement.
Wed Jun 08 10:40:34 2016  [TRACE]: CEquipED42::GetCvChargement(TKeyManagement *keyManagement)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: CVTAG(string trame) et Tag sur un preset DATA
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: CVTAG(string trame) et Tag sur un preset VOICE
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42:: CVTAG(string trame)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:34 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:34 2016  [TRACE]: 00
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:34 2016  [TRACE]: a01N967S#00
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:34 2016  [TRACE]: RES
Wed Jun 08 10:40:34 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:34 2016  [TRACE]: a01N967S#00RES0,0,2
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:34 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N967S#00RES0,0,2RCS#60

Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:34 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:34 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:34 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:34 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:34 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	mess: A01N968S?SETPS9,1,4,6,11,255,0,0,1,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#02000000,50,50,56,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#20

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:35 2016  [TRACE]: 00
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: a01N968S#00
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:35 2016  [TRACE]: RES
Wed Jun 08 10:40:35 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:35 2016  [TRACE]: a01N968S#00RES0,0,2
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:35 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N968S#00RES0,0,2RCS#61

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	mess: A01N969S?ONL9RCS#4c

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: ONL(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: 9
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et SetnrCommandInError !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 1
	cptNbrCmd: 2

Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:35 2016  [TRACE]: 00
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: a01N969S#00
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:35 2016  [TRACE]: RES
Wed Jun 08 10:40:35 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:35 2016  [TRACE]: a01N969S#00RES0,0,1
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:35 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N969S#00RES0,0,1RCS#61

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	mess: A01N970S?ACV?RCS#3b

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: ACV(string trame)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:35 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:35 2016  [TRACE]: 00
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:35 2016  [TRACE]: a01N970S#00ACV255,#ff,#ff,255,255,0000,000000
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:35 2016  [TRACE]: a01N970S#00ACV255,#ff,#ff,255,255,0000,000000
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:35 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N970S#00ACV255,#ff,#ff,255,255,0000,000000RCS#fa

Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:35 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:35 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:36 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:36 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:36 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:36 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:36 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:36 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:36 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:37 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:37 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:37 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:37 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:37 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:37 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:37 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	mess: A01N971S?SYS?RCS#61

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 00
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: a01N971S#00SYS#40100200
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:38 2016  [TRACE]: a01N971S#00SYS#40100200
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:38 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N971S#00SYS#40100200RCS#30

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:38 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	mess: A01N972S?PSS?RCS#59

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: PSS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 512
	format: 8

Wed Jun 08 10:40:38 2016  [TRACE]: 00000200
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: PSS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 00
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: a01N972S#00PSS#00000200
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:38 2016  [TRACE]: a01N972S#00PSS#00000200
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:38 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N972S#00PSS#00000200RCS#23

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	mess: A01N973S?REQPS9?RCS#28

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 05
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:38 2016  [TRACE]: 0000
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:38 2016  [TRACE]: 0000
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 00
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:38 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 04
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:38 2016  [TRACE]: 000000
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:38 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:38 2016  [TRACE]: 00
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:38 2016  [TRACE]: a01N973S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:38 2016  [TRACE]: a01N973S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:38 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N973S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#44

Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:38 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:38 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:38 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:38 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:38 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:39 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:39 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:39 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:39 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:39 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:39 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:39 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:40 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:40 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:40 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:40 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:40 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:40 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:40 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:41 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:41 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:41 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:41 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:41 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:41 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:41 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:42 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:42 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:42 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:42 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:42 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:42 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:43 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:43 2016  [TRACE]: 
	mess: A01N974S?SYS?RCS#64

Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:43 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:43 2016  [TRACE]: 00
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:43 2016  [TRACE]: a01N974S#00SYS#40000200
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:43 2016  [TRACE]: a01N974S#00SYS#40000200
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:43 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N974S#00SYS#40000200RCS#32

Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:43 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:43 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:43 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:43 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:43 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:44 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:44 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:44 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:44 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:44 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:44 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:44 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:45 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	mess: A01N975S?OFL0RCS#38

Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: OFL(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et SetnrCommandInError !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 1
	cptNbrCmd: 2

Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:45 2016  [TRACE]: 00
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:45 2016  [TRACE]: a01N975S#00
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:45 2016  [TRACE]: RES
Wed Jun 08 10:40:45 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:45 2016  [TRACE]: a01N975S#00RES0,0,1
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:45 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N975S#00RES0,0,1RCS#5e

Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	mess: A01N976S?SETPS9,1,4,6,11,255,0,0,1,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#02000000,50,50,56,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#1f

Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:45 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:45 2016  [TRACE]: 00
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:45 2016  [TRACE]: a01N976S#00
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:45 2016  [TRACE]: RES
Wed Jun 08 10:40:45 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:45 2016  [TRACE]: a01N976S#00RES0,0,2
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:45 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N976S#00RES0,0,2RCS#60

Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:45 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:45 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:45 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:45 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	mess: A01N977S?SETPS8,1,1,3,11,255,0,0,1,0,0,1,0,13,0,15,#05,2,#0000,1,#0000,#00,#02000000,50,50,50,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#13

Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:46 2016  [TRACE]: 00
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:46 2016  [TRACE]: a01N977S#00
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:46 2016  [TRACE]: RES
Wed Jun 08 10:40:46 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:46 2016  [TRACE]: a01N977S#00RES0,0,2
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:46 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N977S#00RES0,0,2RCS#61

Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	mess: A01N978S?SETPS10,1,2,0,3,255,0,0,1,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#02000000,50,50,50,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#10

Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:46 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:46 2016  [TRACE]: 00
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:46 2016  [TRACE]: a01N978S#00
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:46 2016  [TRACE]: RES
Wed Jun 08 10:40:46 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:46 2016  [TRACE]: a01N978S#00RES0,0,2
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:46 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N978S#00RES0,0,2RCS#62

Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:46 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:46 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:46 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:47 2016  [TRACE]: 
	mess: A01N979S?SETPS11,1,4,6,11,255,0,0,1,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#02000000,50,50,56,50,#08,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#4b

Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: SETPS(string trame)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::testTrameFirst
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::testTrameFirst et return false;
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et SetnrCommandInError !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 1
	cptNbrCmd: 2

Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:47 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:47 2016  [TRACE]: 00
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:47 2016  [TRACE]: a01N979S#00
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RES()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:47 2016  [TRACE]: RES
Wed Jun 08 10:40:47 2016  [TRACE]: RES0,0
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42::getUneError(string tmp_cmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42:: RES()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:47 2016  [TRACE]: a01N979S#00RES0,0,1
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:47 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N979S#00RES0,0,1RCS#62

Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : case 11: fin Busy!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:47 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:47 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:47 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:47 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:47 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:47 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:48 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:48 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:48 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:48 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:48 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:48 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:48 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	mess: A01N980S?SYS?RCS#61

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: a01N980S#00SYS#40100200
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:49 2016  [TRACE]: a01N980S#00SYS#40100200
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N980S#00SYS#40100200RCS#30

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:49 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	mess: A01N981S?PSS?RCS#59

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: PSS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 1792
	format: 8

Wed Jun 08 10:40:49 2016  [TRACE]: 00000700
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: PSS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: a01N981S#00PSS#00000700
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:49 2016  [TRACE]: a01N981S#00PSS#00000700
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N981S#00PSS#00000700RCS#28

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	mess: A01N982S?REQPS8?RCS#27

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 05
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:49 2016  [TRACE]: 0000
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:49 2016  [TRACE]: 0000
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:49 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 04
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:49 2016  [TRACE]: 000000
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: a01N982S#00REQPS8,1,1,3,11,0,0,0,0,0,0,1,0,13,0,15,#05,2,#0000,1,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:49 2016  [TRACE]: a01N982S#00REQPS8,1,1,3,11,0,0,0,0,0,0,1,0,13,0,15,#05,2,#0000,1,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N982S#00REQPS8,1,1,3,11,0,0,0,0,0,0,1,0,13,0,15,#05,2,#0000,1,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#37

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:49 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	mess: A01N983S?REQPS9?RCS#29

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 5
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 05
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:49 2016  [TRACE]: 0000
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:49 2016  [TRACE]: 0000
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:49 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 04
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:49 2016  [TRACE]: 000000
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:49 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:49 2016  [TRACE]: 00
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:49 2016  [TRACE]: a01N983S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:49 2016  [TRACE]: a01N983S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:49 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N983S#00REQPS9,1,4,6,11,0,0,0,0,0,0,0,0,13,0,15,#05,2,#0000,2,#0000,#00,#000007d0,50,50,56,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#45

Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:49 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:49 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	mess: A01N984S?REQPS10?RCS#52

Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: REQPS(string trame) et traitement
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 9
	format: 2

Wed Jun 08 10:40:50 2016  [TRACE]: 09
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:50 2016  [TRACE]: 0000
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 0
	format: 4

Wed Jun 08 10:40:50 2016  [TRACE]: 0000
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:50 2016  [TRACE]: 00
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 2000
	format: 8

Wed Jun 08 10:40:50 2016  [TRACE]: 000007d0
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 4
	format: 2

Wed Jun 08 10:40:50 2016  [TRACE]: 04
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 0
	format: 6

Wed Jun 08 10:40:50 2016  [TRACE]: 000000
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42::buildTrameREQPS
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42:: REQPS(string trame)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:50 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:50 2016  [TRACE]: 00
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:50 2016  [TRACE]: a01N984S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:50 2016  [TRACE]: a01N984S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:50 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N984S#00REQPS10,1,2,0,3,0,0,0,0,0,0,1,0,13,0,15,#09,1,#0000,2,#0000,#00,#000007d0,50,50,50,50,#04,#000000,0,6,32,50,50,50,50,50,50,38,50,0RCS#35

Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:50 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:50 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:50 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:50 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:50 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:50 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:51 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:51 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:51 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:51 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:51 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:51 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:51 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:52 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:52 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:52 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:52 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:52 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:52 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:52 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:53 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:53 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:53 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:53 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:53 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:53 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:53 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:54 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:54 2016  [TRACE]: 
	mess: A01N985S?SYS?RCS#66

Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:54 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:54 2016  [TRACE]: 00
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:54 2016  [TRACE]: a01N985S#00SYS#40000200
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:54 2016  [TRACE]: a01N985S#00SYS#40000200
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:54 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N985S#00SYS#40000200RCS#34

Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:54 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:54 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:54 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:54 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:54 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:55 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:55 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:55 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:55 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:55 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:56 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:56 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:56 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:56 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:56 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:56 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:56 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:57 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:57 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:57 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:57 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:57 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:57 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:57 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:58 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:58 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:58 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:58 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:58 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:58 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:58 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:59 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:59 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:40:59 2016  [TRACE]: 
	mess: A01N986S?SYS?RCS#67

Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:40:59 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:40:59 2016  [TRACE]: 00
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:40:59 2016  [TRACE]: a01N986S#00SYS#40000200
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:40:59 2016  [TRACE]: a01N986S#00SYS#40000200
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:40:59 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N986S#00SYS#40000200RCS#35

Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:40:59 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:40:59 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:00 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:00 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:00 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:00 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:00 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:00 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:00 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:01 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:01 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:01 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:01 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:01 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:01 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:01 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:02 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:02 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:02 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:02 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:02 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:02 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:02 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:03 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:03 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:03 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:03 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:03 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:03 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:03 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:04 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:04 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:04 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:04 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:04 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:04 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:04 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:05 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:41:05 2016  [TRACE]: 
	mess: A01N987S?SYS?RCS#68

Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:41:05 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:41:05 2016  [TRACE]: 00
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:41:05 2016  [TRACE]: a01N987S#00SYS#40000200
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:41:05 2016  [TRACE]: a01N987S#00SYS#40000200
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:41:05 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N987S#00SYS#40000200RCS#36

Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:05 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:05 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:05 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:05 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:05 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:06 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:06 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:06 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:06 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:06 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:06 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:06 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:07 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:07 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:07 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:07 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:07 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:07 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:07 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:08 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:08 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:08 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:08 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:08 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:08 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:08 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:09 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:09 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:09 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:09 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:09 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:09 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:09 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:10 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:10 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:41:10 2016  [TRACE]: 
	mess: A01N988S?SYS?RCS#69

Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:41:10 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:41:10 2016  [TRACE]: 00
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:41:10 2016  [TRACE]: a01N988S#00SYS#40000200
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:41:10 2016  [TRACE]: a01N988S#00SYS#40000200
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:41:10 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N988S#00SYS#40000200RCS#37

Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:41:10 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:41:10 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:11 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:11 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:11 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:11 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:11 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:11 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:11 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:12 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:12 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:12 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:12 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:12 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:12 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:12 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:13 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:13 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:13 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:13 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:13 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:13 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:13 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:14 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:14 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:14 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:14 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:14 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:14 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:14 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:15 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:15 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:15 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:15 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:15 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) et if(eqp->getReceptionDonnee())!
Wed Jun 08 10:41:15 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:15 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:41:16 2016  [TRACE]: 
	mess: A01N989S?SYS?RCS#6a

Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:41:16 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:41:16 2016  [TRACE]: 00
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:41:16 2016  [TRACE]: a01N989S#00SYS#40000200
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:41:16 2016  [TRACE]: a01N989S#00SYS#40000200
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:41:16 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N989S#00SYS#40000200RCS#38

Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:16 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:16 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:16 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:16 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:16 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:16 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:17 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:17 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:17 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:17 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:17 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:17 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:17 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:17 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:18 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:18 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:18 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:18 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:18 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:18 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:18 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:19 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:19 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:19 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:19 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:19 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:19 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:19 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:20 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:20 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:20 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:20 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:20 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:20 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:20 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:20 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:21 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:21 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:21 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:41:21 2016  [TRACE]: 
	mess: A01N990S?SYS?RCS#62

Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:41:21 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:41:21 2016  [TRACE]: 00
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:41:21 2016  [TRACE]: a01N990S#00SYS#40000200
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:41:21 2016  [TRACE]: a01N990S#00SYS#40000200
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:41:21 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N990S#00SYS#40000200RCS#30

Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:41:21 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:41:21 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:22 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:22 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:22 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:22 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:22 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:22 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:22 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:22 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:23 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:23 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:23 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:23 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:23 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:23 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:23 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:23 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:24 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:24 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:24 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:24 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:24 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:24 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:24 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:24 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:25 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:25 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:25 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:25 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:25 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:25 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:25 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:25 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:26 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:26 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:26 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:26 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:26 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:26 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:26 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:26 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:27 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::ExtraitUtile
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess)
Wed Jun 08 10:41:27 2016  [TRACE]: 
	mess: A01N991S?SYS?RCS#63

Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: A(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: N(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42:: N(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: S(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42:: S(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptNbrCmd++ !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::GetStatusS20()
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42:: SYS(string trame)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et cptSuccessfullCmd++ !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::TraiteTC(char *mess) et if (found!=std::string::npos)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: 
	Dans : CProtoED42:: avant sendAcq(typeCmd)
	cptSuccessfullCmd: 2
	cptNbrCmd: 2

Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S()
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::S() et for (int i=0; i<errorList.size(); i++)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::IntToHexaString(int reponse, int format)
Wed Jun 08 10:41:27 2016  [TRACE]: 
	reponse: 0
	format: 2

Wed Jun 08 10:41:27 2016  [TRACE]: 00
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42::S()
Wed Jun 08 10:41:27 2016  [TRACE]: a01N991S#00SYS#40000200
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et retour de if(isRES)
Wed Jun 08 10:41:27 2016  [TRACE]: a01N991S#00SYS#40000200
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::SetnrCommandInError(int val)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42:: RCS(string reponse, bool outCmd)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42:: sendAcq(int val) et EnvoyerTS
Wed Jun 08 10:41:27 2016  [TRACE]: 
	EnvoyerTS
	reponse: a01N991S#00SYS#40000200RCS#31

Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message)!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CProtoED42::EnvoyerTS(char *message) et ligne.Ecrire(buf) pas de ERREUR_EXTERNE+iResult!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CProtoED42::TraiteTC(char *mess) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:27 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:27 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:27 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:27 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:27 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:27 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:28 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:28 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:28 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:28 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:28 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:28 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans CEquipED42::DecodeStatusError(string val)
Wed Jun 08 10:41:29 2016  [TRACE]: Avant : switch (nIDEvent) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : case 1:) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : case OFFLINE:!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageEmRec(bool val) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : case OFFLINE: et if(eqp->GetRemoteTC() == REMOTE_TC)!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::RazAffichage() !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans CDlgED42::createAffiche(CString motIn, CString motAjout, int lenAjout) !
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : CDlgED42::OnEd42DcpBtnRs() !
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : CDlgED42::initAffichageUn!
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : case OFFLINE:!
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : switch (nIDEvent) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:29 2016  [TRACE]: Debut CDlgED42::affichgeExploitation() et if(eqp->GetOperatingStatus() == ONLINE) et else if(eqp->GetOperatingStatus() == OFFLINE && equip->Actif())!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:29 2016  [TRACE]: Fin CDlgED42::GestionAffichageExploitation!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage(bool val, int param1, int param2) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionAffichage et if (eqp->GetFullSimu()) et else !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CDlgED42::GestionBoutonLockUnlock() !
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : CDlgED42::GestionAffichage!
Wed Jun 08 10:41:29 2016  [TRACE]: Fin CDlgED42::affichgeExploitation() !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CEquipED42::InfoNl()!
Wed Jun 08 10:41:29 2016  [TRACE]: Dans : CEquipED42::InfoEg()
Wed Jun 08 10:41:29 2016  [TRACE]: Fin : CDlgED42::OnTimer(UINT nIDEvent) !
Wed Jun 08 10:41:29 2016  [TRACE]: Dans CProtoED42::RecevoirTC(char *message,int nb_car)
